{
	"name": "Assert_ex",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedDataset_Param",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Param_Delimited_Output",
						"type": "DatasetReference"
					},
					"name": "sinkoutput",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "assertfiltercountry"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          date as string,",
				"          country as string,",
				"          item as integer,",
				"          qty as integer,",
				"          price as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 assert(expectTrue(!isNull(country), false, 'assertcountry', null, \"ThisColumnshouldbenotnull\")) ~> assertfiltercountry",
				"assertfiltercountry sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     outputAssertFailedRows: true,",
				"     assertFailure_container: 'error') ~> sinkoutput"
			]
		}
	}
}